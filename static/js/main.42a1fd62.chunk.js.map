{"version":3,"sources":["firebase.js","util/date.js","components/layout/Tabs.js","components/Product.js","components/ProductList.js","components/OrderSummary.js","components/Container.js","components/Order.js","components/Main.js","components/layout/Header.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","db","firestore","dateFormat","hours","Date","getHours","minutes","concat","getMinutes","substr","Tabs","_ref","matchOption","react_default","a","createElement","className","type","onClick","data-testid","Product","name","image","price","addOrder","id","src","alt","role","ProductList","menu","addOrderItem","orderItems","map","item","components_Product","key","OrderSummary","deleteItem","updateItem","addOrderToFirebase","updateInput","clientsName","onSubmit","length","index","newItemToAdd","Object","objectSpread","quantity","newItemToDecrease","colSpan","reduce","acum","element","htmlFor","placeholder","onChange","value","Container","_useState","useState","_useState2","slicedToArray","setMenu","_useState3","_useState4","options","setOptions","_useState5","_useState6","setOrderItems","_useState7","_useState8","setClientsName","useEffect","_fetchDta","asyncToGenerator","regenerator_default","mark","_callee","result","wrap","_context","prev","next","axios","sent","toConsumableArray","data","stop","apply","this","arguments","fetchDta","layout_Tabs","option","components_ProductList","filter","category","orderArr","orderList","find","components_OrderSummary","newItems","e","preventDefault","collection","add","date","alert","target","Order","setResult","onSnapshot","snap","forEach","doc","push","Main","Fragment","react_router","exact","path","component","Header","react_router_dom","to","App","components_layout_Header","components_Main","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.42a1fd62.chunk.js","sourcesContent":["import firebase from 'firebase';\r\nimport 'firebase/firestore';\r\n\r\nconst config = {\r\n  apiKey: 'AIzaSyAQNbFOa0UnZlatTijqIuxBf1sbLlZ2CeU',\r\n  authDomain: 'burger-queen-600e5.firebaseapp.com',\r\n  databaseURL: 'https://burger-queen-600e5.firebaseio.com',\r\n  projectId: 'burger-queen-600e5',\r\n  storageBucket: 'burger-queen-600e5.appspot.com',\r\n  messagingSenderId: '432037519073',\r\n};\r\nfirebase.initializeApp(config);\r\n\r\nexport default firebase;\r\nexport const db = firebase.firestore();\r\n\r\n","const dateFormat = () => {\r\n  const hours = new Date().getHours();\r\n  const minutes = `0 + ${new Date().getMinutes()}`;\r\n  const formattedTime = `${hours} : ${minutes.substr(-2)}`;\r\n  return formattedTime;   \r\n};\r\nexport default dateFormat;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../../App.css';\r\n\r\nconst Tabs = ({ matchOption }) => (\r\n  <div className=\"list-group list-group-horizontal-lg text-center\">\r\n    <button type=\"button\" className=\"list-group-item list-group-item-action tabs\" onClick={() => matchOption('breakfast')} data-testid=\"breakfast-btn\">Desayuno</button>\r\n    <button type=\"button\" className=\"list-group-item list-group-item-action tabs\" onClick={() => matchOption('menu')} data-testid=\"menu-btn\">Menú</button>\r\n    <button type=\"button\" className=\"list-group-item list-group-item-action tabs\" onClick={() => matchOption('accompaniment')} data-testid=\"accompaniment-btn\">Acompañamientos</button>\r\n    <button type=\"button\" className=\"list-group-item list-group-item-action tabs\" onClick={() => matchOption('drinks')} data-testid=\"drinks-btn\">Bebidas</button>\r\n  </div>\r\n);\r\nexport default Tabs;\r\n\r\nTabs.propTypes = {\r\n  matchOption: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../App.css';\r\n\r\nconst Product = ({\r\n  name, image, price, addOrder, id,\r\n}) => (\r\n  <div className=\"media items\" data-testid=\"product-list\">\r\n    <img className=\"align-self-center ml-3 mr-8 icons\" src={image} alt={name} />\r\n    <span className=\"padding mt-2\">\r\n      {name}\r\n      <br />\r\n      Precio: $\r\n      {price}\r\n    </span>\r\n    <img\r\n      alt=\"agregar orden\"\r\n      src=\"image/mas.png\"\r\n      role=\"presentation\"\r\n      className=\"btn-add\"\r\n      onClick={addOrder}\r\n      data-testid={`${id}-addOrderItem-btn`}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Product;\r\n\r\nProduct.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  image: PropTypes.string.isRequired,\r\n  addOrder: PropTypes.func.isRequired,\r\n  price: PropTypes.number.isRequired,\r\n  id: PropTypes.number.isRequired,\r\n};\r\n","import React from 'react';\r\nimport Product from './Product';\r\n\r\nconst ProductList = ({ menu, addOrderItem, orderItems }) => (\r\n  menu.map(item => (\r\n    <Product\r\n      key={item.id}\r\n      image={item.image}\r\n      name={item.name}\r\n      price={item.price}\r\n      addOrder={() => addOrderItem(orderItems, item)}\r\n      id={item.id}\r\n    />\r\n  ))\r\n);\r\n\r\nexport default ProductList;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './styles/orderSummary.css';\r\n\r\n\r\nconst OrderSummary = ({\r\n  orderItems, deleteItem, updateItem, addOrderToFirebase, updateInput, clientsName,\r\n}) => (\r\n  <form onSubmit={addOrderToFirebase}>\r\n    <table className=\"table table-hover\">\r\n      <thead>\r\n        <tr>\r\n          <th className=\"tb-header\">Cantidad</th>\r\n          <th className=\"tb-header\">Producto</th>\r\n          <th className=\"tb-header\">Precio</th>\r\n          <th className=\"tb-header\">Eliminar</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {orderItems.length > 0 ? (\r\n          orderItems.map((item, index) => (\r\n            <tr key={item.id} data-testid=\"productTableItem\">\r\n              <td>\r\n                <img\r\n                  src=\"image/mas1.png\"\r\n                  role=\"presentation\"\r\n                  alt=\"aumentar\"\r\n                  className=\"btn-none add\"\r\n                  onClick={() => {\r\n                    const newItemToAdd = { ...item };\r\n                    newItemToAdd.quantity += 1;\r\n                    updateItem(index, newItemToAdd);\r\n                  }}\r\n                  data-testid={`${index}-updateItem-btn`}\r\n                />\r\n                <span data-testid={`${index}-amount`}>{item.quantity}</span>\r\n                <img\r\n                  src=\"image/menos-simbolo.png\"\r\n                  role=\"presentation\"\r\n                  alt=\"disminuir\"\r\n                  className=\"btn-none minus\"\r\n                  onClick={() => {\r\n                    const newItemToDecrease = { ...item };\r\n                    newItemToDecrease.quantity -= 1;\r\n                    if (newItemToDecrease.quantity < 1) {\r\n                      newItemToDecrease.quantity = 1;\r\n                    }\r\n                    updateItem(index, newItemToDecrease);\r\n                  }}\r\n                  data-testid={`${index}-updateDecreaseItem-btn`}\r\n                />\r\n              </td>\r\n              <td>{item.name}</td>\r\n              <td>\r\n                {`$ ${item.price * item.quantity}`}\r\n              </td>\r\n              <td>\r\n                <img src=\"image/basura.png\" alt=\"eliminar\" role=\"presentation\" className=\"pointer btn-none\" onClick={() => deleteItem(item.id)} data-testid={`${index}-deleteItem-btn`} />\r\n              </td>\r\n            </tr>\r\n          ))\r\n        ) : (\r\n          <tr>\r\n            <td>Sin orden</td>\r\n          </tr>\r\n        )}\r\n      </tbody>\r\n      <tfoot>\r\n        <tr>\r\n          <th colSpan=\"2\">Total:</th>\r\n          <td>\r\n$\r\n           {orderItems.reduce((acum, element) => acum + (element.quantity * element.price), 0)}\r\n\r\n          </td>\r\n        </tr>\r\n      </tfoot>\r\n    </table>\r\n    <label htmlFor=\"client\" className=\"col-sm-6\">\r\n      <input\r\n        type=\"text\"\r\n        name=\"client\"\r\n        id=\"client\"\r\n        placeholder=\"Nombre del cliente\"\r\n        onChange={updateInput}\r\n        value={clientsName}\r\n        className=\"input\"\r\n        data-testid=\"client-input\"\r\n      />\r\n    </label>\r\n    <button className=\"rounded bg-btn text-light col-sm-6\" type=\"submit\" data-testid=\"add-to-firebase\">Enviar a cocina</button>\r\n  </form>\r\n);\r\n\r\nexport default OrderSummary;\r\n\r\nOrderSummary.propTypes = {\r\n  orderItems: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\r\n  deleteItem: PropTypes.func.isRequired,\r\n  updateItem: PropTypes.func.isRequired,\r\n  addOrderToFirebase: PropTypes.func.isRequired,\r\n  updateInput: PropTypes.func.isRequired,\r\n  clientsName: PropTypes.string.isRequired,\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { db } from '../firebase';\r\nimport dateFormat from '../util/date';\r\nimport Tabs from './layout/Tabs';\r\nimport ProductList from './ProductList';\r\nimport OrderSummary from './OrderSummary';\r\nimport '../App.css';\r\n\r\nconst Container = () => {\r\n  const [menu, setMenu] = useState([]);\r\n  const [options, setOptions] = useState('');\r\n  const [orderItems, setOrderItems] = useState([]);\r\n  const [clientsName, setClientsName] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function fetchDta() {\r\n      const result = await axios('https://raw.githubusercontent.com/cinthyasegura/LIM008-fe-burger-queen/firstStory/src/data/menu.json');\r\n      setMenu([...result.data]);\r\n      setOptions('breakfast');\r\n    }\r\n    fetchDta();\r\n  }, []);\r\n\r\n  const matchOption = option => setOptions(option);\r\n\r\n  const addOrderItem = (orderArr, orderList) => {\r\n    const elementMatch = orderArr.find(item => item.id === orderList.id);\r\n    return elementMatch\r\n      ? (orderList.quantity += 1, setOrderItems([...orderItems]))\r\n      : setOrderItems([...orderItems, orderList]);\r\n  };\r\n\r\n  const deleteItem = (id) => {\r\n    setOrderItems(orderItems.filter(item => item.id !== id));\r\n  };\r\n\r\n  const updateItem = (index, item) => {\r\n    const newItems = [...orderItems];\r\n    newItems[index] = item;\r\n    setOrderItems(newItems);\r\n  };\r\n\r\n  const updateInput = (e) => {\r\n    setClientsName(e.target.value);\r\n  };\r\n\r\n  const addOrderToFirebase = (e) => {\r\n    e.preventDefault();\r\n    if (orderItems !== [] && clientsName !== '') {\r\n      db.collection('users').add({\r\n        clientsName,\r\n        orderItems,\r\n        date: dateFormat(),\r\n      });\r\n      setClientsName('');\r\n      setOrderItems([]);\r\n    } else {\r\n      alert('completa el nombre del cliente');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-6\">\r\n        <Tabs matchOption={matchOption} />\r\n        <ProductList\r\n          menu={menu.filter(item => item.category === options)}\r\n          addOrderItem={addOrderItem}\r\n          orderItems={orderItems}\r\n        />\r\n      </div>\r\n      <div className=\"col-md-6 order\">\r\n        <OrderSummary\r\n          orderItems={orderItems}\r\n          deleteItem={deleteItem}\r\n          updateItem={updateItem}\r\n          addOrderToFirebase={addOrderToFirebase}\r\n          updateInput={updateInput}\r\n          clientsName={clientsName}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Container;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { db } from '../firebase';\r\n\r\n// import getData from '../getData';\r\n// import OrderList from './OrderList';\r\n\r\nconst Order = () => {\r\n  const [result, setResult] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db.collection('users').onSnapshot((snap) => {\r\n      const data = [];\r\n      snap.forEach((doc) => {\r\n        data.push({\r\n          id: doc.id,\r\n          ...doc.data(),\r\n        });\r\n      });\r\n      setResult(data);\r\n    });\r\n    return unsubscribe;\r\n  }, []);\r\n\r\n\r\n  // {item.orderItems.forEach(data => (\r\n  //   <div>{data.name}</div>\r\n  // ))}\r\n\r\n  return (\r\n    <div>\r\n      {result.map(item => (\r\n        <div key={item.id}>\r\n          <div>{item.clientsName}</div>\r\n          <div>{item.date}</div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default Order;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport Container from './Container';\r\nimport Order from './Order';\r\n\r\nconst Main = () => (\r\n  <React.Fragment>\r\n    <Route exact path=\"/\" component={Container} />\r\n    <Route path=\"/pedidos\" component={Order} />\r\n  </React.Fragment>\r\n);\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => (\r\n  <header className=\"header\">\r\n    <nav className=\"navbar\">\r\n      <Link to=\"/\" className=\"nav-item pointer tittle list-none\">Burger Queen</Link>\r\n      <Link to=\"/pedidos\" className=\"nav-item mr-3 pointer secondary list-none \">Ver pedidos &gt;</Link> \r\n    </nav>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport Main from './components/Main';\r\nimport Header from './components/layout/Header';\r\n\r\nconst App = () => (\r\n  <div>\r\n    <Header />\r\n    <Main />\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost'\r\n    // [::1] is the IPv6 localhost address.\r\n    || window.location.hostname === '[::1]'\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    || window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\r\n    ),\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service '\r\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all '\r\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404\r\n        || (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.',\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nReactDOM.render(\r\n  <Router>\r\n    <App />\r\n  </Router>, document.getElementById('root'),\r\n);\r\nserviceWorker.register();\r\n"],"sourceRoot":""}